% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/LISA.R
\name{lisa}
\alias{lisa}
\title{Generate local indicators of spatial association}
\usage{
lisa(
  cells,
  Rs = NULL,
  BPPARAM = BiocParallel::SerialParam(),
  window = "convex",
  window.length = NULL,
  whichParallel = "imageID",
  sigma = NULL,
  lisaFunc = "K",
  minLambda = 0.05,
  fast = TRUE,
  spatialCoords = c("x", "y"),
  cellType = "cellType",
  imageID = "imageID"
)
}
\arguments{
\item{cells}{A SingleCellExperiment, SpatialExperiment or data frame that contains at least the
variables x and y, giving the  coordinates of each cell, imageID and cellType.}

\item{Rs}{A vector of the radii that the measures of association should be calculated.}

\item{BPPARAM}{A BiocParallelParam object.}

\item{window}{Should the window around the regions be 'square', 'convex' or 'concave'.}

\item{window.length}{A tuning parameter for controlling the level of concavity
when estimating concave windows.}

\item{whichParallel}{Should the function use parallization on the imageID or
the cellType.}

\item{sigma}{A numeric variable used for scaling when filting inhomogeneous L-curves.}

\item{lisaFunc}{Either "K" or "L" curve.}

\item{minLambda}{Minimum value for density for scaling when fitting inhomogeneous L-curves.}

\item{fast}{A logical describing whether to use a fast approximation of the
inhomogeneous local L-curves.}

\item{spatialCoords}{The columns which contain the x and y spatial coordinates.}

\item{cellType}{The column which contains the cell types.}

\item{imageID}{The column which contains image identifiers.}
}
\value{
A matrix of LISA curves
}
\description{
Generate local indicators of spatial association
}
\examples{
library(spicyR)
library(SingleCellExperiment)
# Read in data
isletFile <- system.file("extdata", "isletCells.txt.gz", package = "spicyR")
cells <- read.table(isletFile, header = TRUE)
cellExp <- SingleCellExperiment(
  assay = list(intensities = t(cells[, grepl(names(cells), pattern = "Intensity_")])),
  colData = cells[, !grepl(names(cells), pattern = "Intensity_")]
)

# Cluster cell types
markers <- t(assay(cellExp, "intensities"))
kM <- kmeans(markers, 8)
colData(cellExp)$cluster <- paste("cluster", kM$cluster, sep = "")

# Generate LISA
lisaCurves <- lisa(
  cellExp,
  spatialCoords = c("Location_Center_X", "Location_Center_Y"),
  cellType = "cluster", imageID = "ImageNumber"
)

# Cluster the LISA curves
kM <- kmeans(lisaCurves, 2)

}
